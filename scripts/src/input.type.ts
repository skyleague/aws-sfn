/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */
import type { ValidateFunction } from 'ajv'

export interface LambdaIntegrationParameters {
    FunctionName: string
    Payload: unknown
    [k: string]: unknown
}

export const LambdaIntegrationParameters = {
    validate: (await import('./schemas/lambda-integration-parameters.schema.js'))
        .validate10 as unknown as ValidateFunction<LambdaIntegrationParameters>,
    get schema() {
        return LambdaIntegrationParameters.validate.schema
    },
    get errors() {
        return LambdaIntegrationParameters.validate.errors ?? undefined
    },
    is: (o: unknown): o is LambdaIntegrationParameters => LambdaIntegrationParameters.validate(o) === true,
} as const

export interface StateMachineModuleInput {
    file: string
    export: string
    awsRegion: string
    awsAccountId: string
}

export const StateMachineModuleInput = {
    validate: (await import('./schemas/state-machine-module-input.schema.js'))
        .validate10 as unknown as ValidateFunction<StateMachineModuleInput>,
    get schema() {
        return StateMachineModuleInput.validate.schema
    },
    get errors() {
        return StateMachineModuleInput.validate.errors ?? undefined
    },
    is: (o: unknown): o is StateMachineModuleInput => StateMachineModuleInput.validate(o) === true,
} as const
